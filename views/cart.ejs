<%- include('partials/head.ejs') %> 
<%- include('partials/navbar.ejs') %>

<% let totalPrice = 0 %>

<div class="container">
  <div class="container bg-bookso text-center text-light fs-4 fw-bold">
    CART
  </div>

  <div class="d-flex justify-content-center">
    <div class="ms-4 col-6 mt-4" id="product-container">
      <% if (products.length === 0) { %>
        <h2>No items in cart</h2>
      <% } %> 
      
      <% products.forEach(product => { %>
        <div class="w-100 d-flex border rounded m-2 shadow product-card">
          <div class="col-2 ms-2">
            <img src="../uploads/<%= product.productId.image[0] %>" class="w-100" style="width: 100%; height: 100%; object-fit: contain" />
          </div>

          <div class="col-10 d-flex flex-column py-2 ps-2">
            <div class="fw-bold mt-1"><%= product.productId.name %></div>
            <div class="fw-bold text-primary mt-1"> 
              <% totalPrice = totalPrice + (product.productId.price * product.qty) %>
              price: ₹<span class="itemPrice"><%= product.productId.price %></span>
            </div>
            <!-- <div class="fw-bold text-success mt-1">Delivered on 17th Aug</div> -->
            <!-- <div class="fw-bold text-primary mt-1">discount: ₹<%=// product.productId.discount %></div> -->
            <div class="container mt-2">
              <div class="quantity-selector d-flex">
                <!-- <span id="quantity" class="ms-1 me-1 qty" productId="<%=// product.productId._id %>"></span> -->
                <button class="btn quantity-btn border-warning bg-bookso qty-dec">-</button>
                <span id="quantity" class="ms-1 me-1 qty" productId="<%= product.productId._id %>"><%= product.qty %></span>
                <button class="btn quantity-btn border-warning bg-bookso qty-inc" productId="<%= product.productId %>" qty="<%= product.qty %>">+</button>
              </div>
              <div class="d-flex align-items-center justify-content-end">
                <form>
                  <a href="/cart/delete/<%= product.productId._id %>" class="btn btn-danger fw-bold me-2">Delete</a>
                </form>
              </div>
            </div>
          </div>
        </div>
      <% }) %>
    </div>

    <div class="ms-4 col-5 mt-4">
      <div class="w-100 border border-3 rounded m-2" style="background-color: #d3dbee">
        <div class="ms-4 fw-bold mb-2">APPLY COUPON</div>
        <div class="row g-3 align-items-center mb-3">

          <form id="couponForm" class="d-flex">
            <div class="col-auto ms-4 w-50 me-2">
              <input type="text" name="couponCode" class="form-control me-2" placeholder="Enter coupon code" />
            </div>
            <button type="submit" class="btn-global-primary">CHECK</button>
          </form>

        </div>
        <div class="alert alert-success m-1 hidden" id="coupon-success-alert" role="alert">
          Coupon applied successfully
        </div>
      </div>
    <form action="/orders/placeOrder" method="post">
      <div class="w-100 border shadow shadow-rounded rounded m-2">
        <div class="container text-bookso text-center fs-4 fw-bold mt-2">PRICE DETAILS</div>
        <hr/>
        <div class="ms-2 text-secondary fw-bold">
          PRICE: <input class="border-0" name="initialPrice" id="price" value="<%= totalPrice %>"></input>
          <br/>
          DISCOUNT: <input class="border-0" name="discountValue" id="discount" value="0"></input>
          <br/>
          DELIVERY CHARGES: <input class="border-0" name="deliveryCharge" id="delivery" value="<%= totalPrice * shippingCharge %>"></input>
        </div> 
        <!-- <input style="display: none;" id="coupon" type="number" name="coupon" class="form-control me-2" value="0"/> -->
        <input  style="display: none;" class="border-0" name="discountPercentage" id="percentage" value="0"></input>
        <input  style="display: none;" class="border-0" name="totalpriceDiscount" id="discount-price" value="0"></input>
        <hr/>
        <span class="fw-bold ms-2">TOTAL AMOUNT:</span>
        <input name="totalPrice" id="total" class="fw-bold border-0" value="<%= Math.floor(totalPrice * (1 + shippingCharge)) %>"></input>
        <hr/>
      </div>
    

      <% if (products.length === 0) { %>
        <div class="container bg-bookso text-center text-secondary fs-4 fw-bold mt-4 ms-2">NO ITEMS</div>
      <% } else { %>
        <div class="container d-flex justify-content-end">
          <div class="col-12">
            <button class="text-decoration-none border-0 w-100" id="submit-btn" style="width: 450px;">
              <div class="container bg-bookso text-center text-light w-100 fs-4 fw-bold">PLACE ORDER</div>
            </button>
          </div>
        </div>
      <% } %>
    </form>
    </div>
  </div>
</div>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
   const priceElement = document.querySelector("#price");
    const discountChargesElement = document.querySelector("#discount");
    const deliveryChargesElement = document.querySelector("#delivery");
    const totalAmountElement = document.querySelector("#total");
    const discouPercentage = document.querySelector("#percentage");
    const totalPriceDiscount = document.querySelector("#discount-price");
    const couponFormElt = document.getElementById("couponForm");
    const couponData = document.getElementById("coupon")
    
    const quantityAll = document.querySelectorAll(".quantity-selector");
    const cards = document.querySelectorAll(".product-card")
    const couponAlertElt = document.querySelector('#coupon-success-alert')
    
  console.log(cards)

  const couponSuccessAlertShow = ()=>{
    couponAlertElt.classList.remove('hidden')
  }
  const couponSuccessAlertHide = ()=>{
    couponAlertElt.classList.add('hidden')
  }

   const priceControls = {
      setPrice(price) {
      priceElement.value = price
    },
      getPrice(){
      return Number(priceElement.value);
    },

      setDiscount(discount){
      discountChargesElement.value = discount
    },
      getDiscount(){
      return Number(discountChargesElement.value);
    },

      setDelivery(delivery){
      deliveryChargesElement.value = delivery
    },
      getDelivery(){
      return Number(deliveryChargesElement.value);
    },

      setTotalAmount(totalAmount){
      totalAmountElement.value = totalAmount
    },
      getTotalAmount(){
      return Number(totalAmountElement.value)
    },

      setDiscountPercentage(percentage){
      discouPercentage.value = percentage
    },
      getDiscountPercentage(){
      return Number(discouPercentage.value)
    },

      settotalPriceDiscount(){
      totalPriceDiscount.value = discountPrice
    },
      gettotalPriceDiscount(){
      return Number(totalPriceDiscount.value)
    },
     
  }
   
  const updatePrice = ()=>{
   
      let totalPrice = 0
      cards.forEach(card => {
        const quantity = card.querySelector("#quantity").innerHTML * 1;
        console.log(quantity)
        const itemPrice = card.querySelector(".itemPrice").innerHTML* 1;
        console.log(itemPrice)
         totalPrice = totalPrice +(quantity * itemPrice);
         console.log(totalPrice)
      });
      priceControls.setPrice(totalPrice)
      priceControls.setTotalAmount(totalPrice+priceControls.getDelivery())
      priceControls.setDiscount(0);
      priceControls.setDiscountPercentage(0);
      document.querySelector('[name=couponCode]').value = '';
      couponSuccessAlertHide()
      
    }
  

    quantityAll.forEach((quantity) => {
      const qtyVal = quantity.querySelector(".qty");
      const qtyInc = quantity.querySelector(".qty-inc");
      const qtyDec = quantity.querySelector(".qty-dec");

      const productId = qtyVal.getAttribute("productId");

      // Event listener for increasing quantity
      qtyInc.addEventListener("click", async () => {
        const jsonData = await fetch(
          `/cart/increaseQty/${productId}/${qtyVal.innerHTML}`
        );
        const outOfStockMessageDiv = document.querySelector(
          ".out-of-stock-message"
        );

        if (jsonData.status == 406) {
          if (!outOfStockMessageDiv) {
            // Create and append a new "Out of Stock" message div
            const newOutOfStockMessageDiv = document.createElement("div");
            newOutOfStockMessageDiv.textContent = "Out of Stock";
            newOutOfStockMessageDiv.classList.add(
              "ps-2",
              "text-danger",
              "out-of-stock-message"
            );
            quantity.appendChild(newOutOfStockMessageDiv);
          }
        } else {
          if (outOfStockMessageDiv) {
            outOfStockMessageDiv.remove();
          }

          const response = await jsonData.json();
          qtyVal.innerHTML = response.message; 
          updatePrice()
        }
      });

      // Event listener for decreasing quantity
      qtyDec.addEventListener("click", async () => {
        const jsonData = await fetch(
          `/cart/decreaseQty/${productId}/${qtyVal.innerHTML}`
        );
        const outOfStockMessageDiv = document.querySelector(
          ".out-of-stock-message"
        );

        if (jsonData.status == 406) {
          if (!outOfStockMessageDiv) {
            // Create and append a new "Out of Stock" message div
            const newOutOfStockMessageDiv = document.createElement("div");
            newOutOfStockMessageDiv.textContent = "Out of Stock";
            newOutOfStockMessageDiv.classList.add(
              "ps-2",
              "text-danger",
              "out-of-stock-message"
            );
            quantity.appendChild(newOutOfStockMessageDiv);
          }
        } else {
          if (outOfStockMessageDiv) {
            outOfStockMessageDiv.remove();
          }

          const response = await jsonData.json();
          qtyVal.innerHTML = response.message;
          updatePrice()
        }
      });
    });

   
    // let discountPrice = 0;
    // let deliveryCharg = 0;
    // let priceValue = 0;
    // let discountPercentage = 0;
    // let discount = "";

  
    //price details controlling functions
   

    couponFormElt.addEventListener("submit", async (event) => {
      event.preventDefault();
      const formData = new FormData(event.target);
      const couponCode = formData.get("couponCode");

      const couponData = await fetch(`/addCoupon/${couponCode}`);
      const res = await couponData.json();
   
      if (res.success == false) {
        alert("Invalid Coupon");
      } else if (res.success == true) {
        alert("Apply");
        
        priceControls.setDiscount(res.discount*priceControls.getPrice()/100);
        priceControls.setTotalAmount((priceControls.getPrice()+priceControls.getDelivery())-priceControls.getDiscount())
        priceControls.setDiscountPercentage(res.discount);
        couponSuccessAlertShow();
       
      }
    });

    const submitBtn = document.querySelector("#submit-btn");
    let placeOrderForm;
    submitBtn.addEventListener("click", async () => {
      console.log("clicked");
      const body = await JSON.stringify({
        totalPrice: discountedPrice + deliveryCharg,
        deliveryCharg,
        price: priceValue,
        discountedPrice,
        discountPercentage,
        discount,
        coupon: discountPercentage ? true : false,
      });

      console.log({ body });
      // fetch("/orders/placeOrder", {
      //   method: "POST",
      //   headers: {
      //     "Content-Type": "application/json",
      //   },
      //   body,
      // })
      //   .then((res) => {
      //     return res.text();
      //   })
      //   .then((html) => {
      //     console.log({ html });
      //     document.body.innerHTML = html;
      //     placeOrderForm = document.querySelector("#placeOrderForm");
      //     console.log({ placeOrderForm });
      //   });
    });
  </script>





  <%- include('partials/closingHead.ejs') %>
</div>
